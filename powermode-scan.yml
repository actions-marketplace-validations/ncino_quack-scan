name: powermode-scan

# Controls when the action will run. 
on:
  # Triggers the workflow on push events for the release or master branch
  # master branch is included because some repos still use that as the base branch.
  pull_request:
    branches: [ release, master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  powermode-scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so this job can access it
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup PMD Source Code Analyzer
        uses: sfdx-actions/setup-pmd@v1

      # Attempts to load pmd cache.  Creates a cache is one is not found.
      - name: Cache pmd File Analysis
        uses: actions/cache@v2
        env:
          cache-name: cache-pmd-file-analysis
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.pmd
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('~/.pmd') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Builds a list of all files that were affected by the Push or PR.
      - name: Get all New and Modified Files
        id: file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          output: ','
          fileOutput: ','

      # Runs PMD scan on all files that have been modified to limit the number of recommendations.
      - name: Run PMD Scan
        run: pmd 
              -filelist $HOME/files.csv
              -rulesets ./.github/workflows/apexAllRuleSet.xml
              -format xml
              -reportfile ./report.xml
              -failOnViolation false
              -cache ~/.pmd

      - run: cat ./report.xml

      # Annotate the scan results with PMD 
      - name: Annotate with PMD Results
        uses: jwgmeligmeyling/pmd-github-action@v1.2
        with:
          path: './report.xml'
          name: 'PMD Annotation'
